body {
    font-family: "Lato", "sans-serif";
    font-weight: 400;
    font-size: $default-font-size; /* font-size: 16px; */
    line-height: 1.9; /*1.7 times (70%) bigger that the default line-height*/
    letter-spacing: 2;
    color: $color-grey-dark-2;

    @include respond(phone) { //width < 600?
       line-height: 1;
    }

}

.heading-primary {
   font-size: 5rem;
   letter-spacing: .5rem;
   color: $color-grey-light-2;
   line-height: 1.2;

   & + .paragraph {
        color: $color-secondary;
   }

   @include respond(phone) { //width < 900?
        font-size: 4rem;
        margin-bottom: 1rem;

        & + .paragraph {
            line-height: 1.3;
            letter-spacing: 1.8;
        }
    }

}

.heading-secondary {
    font-family: 'Papyrus';
    font-size: 4.5rem;
    font-weight: 100;

    @include respond(phone) { //width < 900?
        & .heading-divider {
            width: 10rem;
        }
    }
   
}

.heading-divider {
    border-bottom: 2px solid $color-primary;
    margin: 1rem 0 2rem 0;
    width: 18%;
    display: block;
    position: relative;
    top:50%;
    left:50%;
    transform:translate(-50%, -50%);
}

.heading-tertiary {
    font-size: 3.6rem;
    font-weight: 400;
}

.heading-quaternary {
    font-size: 2.2rem;
    font-weight: 400;
}

.paragraph {
    font-size: 2rem;
    line-height: 1.2;
    // letter-spacing: 2.5;
}

//Font Colors

.heading--color-primary {
    color: $color-primary-light;
}
.heading--color-secondary {
    color: $color-secondary;
}
.heading--color-tertiary {
    color: $color-tertiary;
}
.heading--color-tertiary-dark {
    color: rgba($color-tertiary-dark, 0.9);
}
.heading--color-white {
    color: $color-white;
}

.horizontal-ruler {
    border: .5px solid $color-primary-light;
}

// TRUNCATE TEXT

.truncate-overflow {
    --max-lines: 6;
    --lh: 2.5rem;
    line-height: var(--lh);
    position: relative;
    max-height: calc(var(--lh) * var(--max-lines));
    overflow: hidden;
    padding-right: 1rem; /* space for ellipsis */
  }
  .truncate-overflow::before {
    position: absolute;
    content: "...";
    /* tempting... but shows when lines == content */
    /* top: calc(var(--lh) * (var(--max-lines) - 1)); */
    
    /*
    inset-block-end: 0;
    inset-inline-end: 0;
    */
    bottom: 0;
    right: 0;
  }
  .truncate-overflow::after {
    content: "";
    position: absolute;
    /*
    inset-inline-end: 0;
    */
    right: 0;
    /* missing bottom on purpose*/
    width: 1rem;
    height: 1rem;
    // background: white;
  }